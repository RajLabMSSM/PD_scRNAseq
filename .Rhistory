geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax)
ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
geom_text_repel(data= arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,],
# filter(DEG_df, avg_logFC>=1.5)[1:10,],
aes(label=gene),  color="black", alpha=.5,
segment.color="black", segment.alpha=.5
)
arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
geom_text_repel(data= arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,],
# filter(DEG_df, avg_logFC>=1.5)[1:10,],
aes(label=gene),  color="black", alpha=.5,
segment.color="black", segment.alpha=.5
)
?geom_text_repel
ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
ggrepel::geom_text_repel(data= arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,],
# filter(DEG_df, avg_logFC>=1.5)[1:10,],
aes(label=gene),  color="black", alpha=.5,
segment.color="black", segment.alpha=.5
)
arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
vol <- ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
ggrepel::geom_text_repel(data= data.frame(arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,]),
# filter(DEG_df, avg_logFC>=1.5)[1:10,],
aes(label=gene),  color="black", alpha=.5,
segment.color="black", segment.alpha=.5
) +
# Lines
geom_vline(xintercept= -1.5,lty=4, lwd=.3, alpha=.5) +
geom_vline(xintercept= 1.5,lty=4, lwd=.3, alpha=.5) +
geom_hline(yintercept= -log10(0.05),lty=4, lwd=.3, alpha=.5) +
ggtitle(caption)
print(vol)
class(arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,])
ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
ggrepel::geom_text_repel(data= arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,],
# filter(DEG_df, avg_logFC>=1.5)[1:10,],
# aes(label=gene),  color="black", alpha=.5,
# segment.color="black", segment.alpha=.5
)
ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
ggrepel::geom_text_repel(data= arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,],
# filter(DEG_df, avg_logFC>=1.5)[1:10,],
aes(label=gene),
# color="black", alpha=.5,
# segment.color="black", segment.alpha=.5
)
gene
arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
DEG_df
DEG_df <- arrange(DEG_df, desc(sig))
DEG_df
yMax  <- max(-log10(DEG_df$p_val_adj)) + max(-log10(DEG_df$p_val_adj))/3 #ifelse(max(-log10(DEG_df$p_val_adj))<45, 50, max(-log10(DEG_df$p_val_adj)) + 10)
yMax
DEG_df
# IMPORTANT!# Must replace 0s with small numbers to avoid getting errors when taking the -log
.Machine$double.xmin
# IMPORTANT!# Must replace 0s with small numbers to avoid getting errors when taking the -log
subset(DEG_df, p_val_adj==0)$p_val_adj <-    .Machine$double.xmin
DEG_df[DEG_df$p_val_adj==0,"p_val_adj"]
# IMPORTANT!# Must replace 0s with small numbers to avoid getting errors when taking the -log
DEG_df[DEG_df$p_val_adj==0,"p_val_adj"] <- .Machine$double.xmin
vol <- ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
ggrepel::geom_text_repel(data= arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,],
# filter(DEG_df, avg_logFC>=1.5)[1:10,],
aes(label=gene),
color="black", alpha=.5,
segment.color="black", segment.alpha=.5
) +
# Lines
geom_vline(xintercept= -1.5,lty=4, lwd=.3, alpha=.5) +
geom_vline(xintercept= 1.5,lty=4, lwd=.3, alpha=.5) +
geom_hline(yintercept= -log10(0.05),lty=4, lwd=.3, alpha=.5) +
ggtitle(caption)
print(vol)
DEG_df
vol <- ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
# ggrepel::geom_text_repel(data= arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,],
#                 # filter(DEG_df, avg_logFC>=1.5)[1:10,],
#                 aes(label=gene),
#                 color="black", alpha=.5,
#                 segment.color="black", segment.alpha=.5
#                 ) +
# Lines
geom_vline(xintercept= -1.5,lty=4, lwd=.3, alpha=.5) +
geom_vline(xintercept= 1.5,lty=4, lwd=.3, alpha=.5) +
geom_hline(yintercept= -log10(0.05),lty=4, lwd=.3, alpha=.5) +
ggtitle(caption)
print(vol)
install.''
install.packages("manhattanly")
manhattanly::volcanor(DEG_df, p = "p_val_adj", effect_size = "avg_logFC",gene = "gene")
volcr <- manhattanly::volcanor(DEG_df, p = "p_val_adj", effect_size = "avg_logFC",gene = "gene")
manhattanly::volcanoly(volcr)
DEG_df
volcr <- manhattanly::volcanor(DEG_df, p = "p_val_adj", effect_size = "FC",gene = "gene")
manhattanly::volcanoly(volcr)
DEG_df
volcr <- manhattanly::volcanor(DEG_df, p = "p_val_adj", effect_size = "avg_logFC",gene = "gene")
manhattanly::volcanoly(volcr)
library(manhattanly)
volcanoly(volcr,genomewideline = -log10(1e-2))
volcr <- manhattanly::volcanor(DEG_df, p = "p_val_adj", snp = "gene", effect_size = "avg_logFC",gene = "gene")
volcanoly(volcr, genomewideline = -log10(1e-2))
remove.packages("manhattanly")
if (!requireNamespace('BiocManager', quietly = TRUE))
BiocManager::install('EnhancedVol
BiocManager::install('EnhancedVolcano')
View(topBiomarkers)
library(EnhancedVolcano); #BiocManager::install('EnhancedVolcano')
EnhancedVolcano::EnhancedVolcano(toptable = DEG_df, x="avg_logFC", y="p_val_adj")
EnhancedVolcano::EnhancedVolcano(toptable = DEG_df, x="avg_logFC", y="p_val_adj", lab=caption)
EnhancedVolcano::EnhancedVolcano(toptable = DEG_df, x="avg_logFC", y="p_val_adj", lab=caption, subtitle = "") +
##Construct the plot object
volcanoPlot <- function(DEG_df, caption="", topFC_labeled=5){
DEG_df$sig<-  ifelse( DEG_df$p_val_adj<0.05 & DEG_df$avg_logFC<1.5, "p_val_adj<0.05",
ifelse( DEG_df$p_val_adj<0.05  & DEG_df$avg_logFC>1.5, "p_val_adj<0.05 & avg_logFC>1.5",
"p_val_adj>0.05"
))
DEG_df <- arrange(DEG_df, desc(sig))
yMax  <- max(-log10(DEG_df$p_val_adj)) + max(-log10(DEG_df$p_val_adj))/3
# IMPORTANT!# Must replace 0s with small numbers to avoid getting errors when taking the -log
DEG_df[DEG_df$p_val_adj==0,"p_val_adj"] <- .Machine$double.xmin
#ifelse(max(-log10(DEG_df$p_val_adj))<45, 50, max(-log10(DEG_df$p_val_adj)) + 10)
vol <- ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
# ggrepel::geom_text_repel(data= arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,],
#                 # filter(DEG_df, avg_logFC>=1.5)[1:10,],
#                 aes(label=gene),
#                 color="black", alpha=.5,
#                 segment.color="black", segment.alpha=.5
#                 ) +
# Lines
geom_vline(xintercept= -1.5,lty=4, lwd=.3, alpha=.5) +
geom_vline(xintercept= 1.5,lty=4, lwd=.3, alpha=.5) +
geom_hline(yintercept= -log10(0.05),lty=4, lwd=.3, alpha=.5) +
ggtitle(caption)
print(vol)
}
EnhancedVolcano::EnhancedVolcano(toptable = DEG_df, x="avg_logFC", y="p_val_adj", lab=caption, subtitle = "")
EnhancedVolcano::EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",
lab="gene", pointsize=3,
title=caption,
subtitle = "")
EnhancedVolcano::EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",
lab="gene", pointSize=3,
title=caption,
subtitle = "")
EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",
lab="gene",
pointSize=3,
title=caption,
subtitle = "")
EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",
lab="gene",
title=caption,
subtitle = "")
labeled_genes <- arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
labeled_genes
EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",
lab="gene",
title=caption,
subtitle = "")
EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",
lab="gene",
title=caption,
subtitle = "") + theme_bw()
rownames(DEG_df) <_ gene
rownames(DEG_df) <- DEG_df$gene
EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",
lab=rownames(gene),
title=caption,
subtitle = "") + theme_bw()
EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",
lab=rownames(DEG_df),
title=caption,
subtitle = "") + theme_bw()
vol <- EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",
lab=rownames(DEG_df),
title=caption,
subtitle = "") + theme_bw()
vol
labeled_genes
labeled_genes
labeled_genes <- arrange(DEG_df,  p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
#
#
vol <- ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
ggrepel::geom_text_repel(data=labeled_genes,
# filter(DEG_df, avg_logFC>=1.5)[1:10,],
aes(label=gene),
color="black", alpha=.5,
segment.color="black", segment.alpha=.5
) +
# Lines
geom_vline(xintercept= -1.5,lty=4, lwd=.3, alpha=.5) +
geom_vline(xintercept= 1.5,lty=4, lwd=.3, alpha=.5) +
geom_hline(yintercept= -log10(0.05),lty=4, lwd=.3, alpha=.5) +
ggtitle(caption)
print(vol)
#
#
vol <- ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
ggrepel::geom_text_repel(data=labeled_genes,
# filter(DEG_df, avg_logFC>=1.5)[1:10,],
aes(text=gene),
color="black", alpha=.5,
segment.color="black", segment.alpha=.5
) +
# Lines
geom_vline(xintercept= -1.5,lty=4, lwd=.3, alpha=.5) +
geom_vline(xintercept= 1.5,lty=4, lwd=.3, alpha=.5) +
geom_hline(yintercept= -log10(0.05),lty=4, lwd=.3, alpha=.5) +
ggtitle(caption)
print(vol)
# labeled_genes <- arrange(DEG_df, p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
labeled_genes <- subset(DEG_df, p_val_adj<.05 & avg_logFC>=1.5)
labeled_genes
# labeled_genes <- arrange(DEG_df, p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
labeled_genes <- subset(DEG_df, p_val_adj<.05 | avg_logFC>=1.5)
labeled_genes <- arrange(labeled_genes, p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
labeled_genes
labeled_genes <- subset(DEG_df, p_val_adj<.05 | avg_logFC>=1.5)
gene
# EnhancedVolcano library
# vol <- EnhancedVolcano::EnhancedVolcano(toptable = DEG_df,
#                                  x="avg_logFC",
#                                  y="p_val_adj",
#                                  lab=rownames(DEG_df),
#                                  title=caption,
#                                  subtitle = "") + theme_bw()
# Custome
vol <- ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
ggrepel::geom_text_repel(data=labeled_genes,
aes(label=rownames(labeled_genes)),
color="black", alpha=.5,
segment.color="black", segment.alpha=.5
) +
# Lines
geom_vline(xintercept= -1.5,lty=4, lwd=.3, alpha=.5) +
geom_vline(xintercept= 1.5,lty=4, lwd=.3, alpha=.5) +
geom_hline(yintercept= -log10(0.05),lty=4, lwd=.3, alpha=.5) +
ggtitle(caption)
print(vol)
# EnhancedVolcano library
# vol <- EnhancedVolcano::EnhancedVolcano(toptable = DEG_df,
#                                  x="avg_logFC",
#                                  y="p_val_adj",
#                                  lab=rownames(DEG_df),
#                                  title=caption,
#                                  subtitle = "") + theme_bw()
# Custome
vol <- ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
geom_point(alpha=0.5, size=3, aes(col=sig)) +
scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
"p_val_adj<0.05 & avg_logFC>1.5"="purple",
"p_val_adj>0.05" = "darkgray")) +
theme(legend.position = "none") +
xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
ylab(expression(paste(-log^{10},"(p-value)"))) +
xlim(-2,2) + ylim(0, yMax) +
## ggrepl labels
ggrepel::geom_text_repel(data=labeled_genes,
aes(label=gene, x=avg_logFC, y= -log10(p_val_adj)),
color="black", alpha=.5,
segment.color="black", segment.alpha=.5
) +
# Lines
geom_vline(xintercept= -1.5,lty=4, lwd=.3, alpha=.5) +
geom_vline(xintercept= 1.5,lty=4, lwd=.3, alpha=.5) +
geom_hline(yintercept= -log10(0.05),lty=4, lwd=.3, alpha=.5) +
ggtitle(caption)
print(vol)
labeled_genes
DEG_df
# EnhancedVolcano library
vol <- EnhancedVolcano::EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",transcriptPointSize = .5,
lab=rownames(DEG_df),
title=caption,
subtitle = "") + theme_bw()
print(vol)
# EnhancedVolcano library
vol <- EnhancedVolcano::EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",transcriptPointSize = 3,
lab=rownames(DEG_df),
title=caption,
subtitle = "") + theme_bw()
print(vol)
##Construct the plot object
volcanoPlot <- function(DEG_df, caption="", topFC_labeled=5){
DEG_df$sig<-  ifelse( DEG_df$p_val_adj<0.05 & DEG_df$avg_logFC<1.5, "p_val_adj<0.05",
ifelse( DEG_df$p_val_adj<0.05  & DEG_df$avg_logFC>1.5, "p_val_adj<0.05 & avg_logFC>1.5",
"p_val_adj>0.05"
))
DEG_df <- arrange(DEG_df, desc(sig))
yMax  <- max(-log10(DEG_df$p_val_adj)) + max(-log10(DEG_df$p_val_adj))/3
# IMPORTANT!# Must replace 0s with small numbers to avoid getting errors when taking the -log
DEG_df[DEG_df$p_val_adj==0,"p_val_adj"] <- .Machine$double.xmin
rownames(DEG_df) <- DEG_df$gene
labeled_genes <- subset(DEG_df, p_val_adj<.05 | avg_logFC>=1.5)
if(nrow(labeled_genes)>topFC_labeled){
labeled_genes <- arrange(labeled_genes, p_val_adj, desc(avg_logFC))[1:topFC_labeled,]
}
# EnhancedVolcano library
vol <- EnhancedVolcano::EnhancedVolcano(toptable = DEG_df,
x="avg_logFC",
y="p_val_adj",transcriptPointSize = 3,
lab=rownames(DEG_df),
title=caption,
subtitle = "") + theme_bw()
print(vol)
# # Custome
# vol <- ggplot(data=DEG_df, aes(x=avg_logFC, y= -log10(p_val_adj))) +
#   geom_point(alpha=0.5, size=3, aes(col=sig)) +
#   scale_color_manual(values=list("p_val_adj<0.05"="turquoise3",
#                                  "p_val_adj<0.05 & avg_logFC>1.5"="purple",
#                                  "p_val_adj>0.05" = "darkgray")) +
#   theme(legend.position = "none") +
#   xlab(expression(paste("Average ",log^{2},"(fold change)"))) +
#   ylab(expression(paste(-log^{10},"(p-value)"))) +
#   xlim(-2,2) + ylim(0, yMax) +
#   ## ggrepl labels
#   ggrepel::geom_text_repel(data=labeled_genes,
#                             aes(label=gene, x=avg_logFC, y= -log10(p_val_adj)),
#                             color="black", alpha=.5,
#                             segment.color="black", segment.alpha=.5
#                   ) +
#   # Lines
#   geom_vline(xintercept= -1.5,lty=4, lwd=.3, alpha=.5) +
#   geom_vline(xintercept= 1.5,lty=4, lwd=.3, alpha=.5) +
#   geom_hline(yintercept= -log10(0.05),lty=4, lwd=.3, alpha=.5) +
#   ggtitle(caption)
# print(vol)
}
# Run plots
for (clust in unique(DAT.markers$cluster)){
cat('\n')
cat("### Cluster ",clust,": Volcano","\n")
cap <- paste("Cluster",clust,"DEG Table")
DEG_df <- subset(DAT.markers, cluster==as.character(clust)) %>% arrange(desc(avg_logFC))
volcanoPlot(DEG_df = DEG_df, caption = cap)
createDT_html(DEG_df, caption = cap)
cat('\n')
}
for (clust in top1$cluster){
subClust <- subset( top1, cluster==clust)
cat('\n')
cat("### Cluster",clust,"\n")
cat( "Biomarker\n",subClust$gene)
results <- Seurat::FindGeneTerms(QueryGene = subClust$gene)
print(results) #parse_html_notebook(results)
cat('\n')
}
?FindGeneTerms
query <- subset(subClust, p_val_adj<0.05)$gene %>% as.character()
gostres <- gprofiler2::gost(query = query, organism = "hsapiens")
gprofiler2::gostplot(gostres)
gostres
gostres <- gprofiler2::gost(query = query, organism = "hsapiens")
gostres <- gprofiler2::gost(query = query, organism = "hsapiens", significant = F)
gprofiler2::gostplot(gostres)
createDT(gostres$result)
for (clust in top1$cluster){
subClust <- subset( top1, cluster==clust)
cat('\n')
cat("### Cluster",clust,"\n")
cat( "Biomarker\n",subClust$gene)
query <- subset(subClust, p_val_adj<0.05)$gene %>% as.character()
gostres <- gprofiler2::gost(query = query, organism = "hsapiens", significant = F)
gprofiler2::gostplot(gostres)
createDT_html(gostres$result)
# results <- Seurat::FindGeneTerms(QueryGene = subClust$gene)
# print(results) #parse_html_notebook(results)
cat('\n')
}
