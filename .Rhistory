import_parameters(params)
######################################################
#### #### PACKAGES #### ####
######################################################
library(monocle3)
paste("monocle3", packageVersion("monocle3"))
library(cowplot)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(reshape2)
library(ggrepel)
library(plotly)
library(GeneOverlap) # BiocManager::install("GeneOverlap")
######################################################
# Exporting 3D plots
knitr::knit_hooks$set(webgl = rgl::hook_webgl)
dge_limit <- F # 100
nCores <- 4#parallel::detectCores()
set.seed(2019)
# Load preprocessed data
load("./Data/monocle3_CDS.RData")
cds
#### #### PACKAGES #### ####
######################################################
library(monocle3)
devtools::install_github('cole-trapnell-lab/monocle3')
devtools::install_github('cole-trapnell-lab/monocle3')
BiocManager::install("batchelor")
devtools::install_github('cole-trapnell-lab/monocle3')
#### #### PACKAGES #### ####
######################################################
library(monocle3) # devtools::install_github('cole-trapnell-lab/monocle3')
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
library(monocle3) # devtools::install_github('cole-trapnell-lab/monocle3')
paste("monocle3", packageVersion("monocle3"))
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
library(cowplot)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(ggrepel)
start_time <- Sys.time()
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
library(monocle3) # devtools::install_github('cole-trapnell-lab/monocle3')
paste("monocle3", packageVersion("monocle3"))
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
######################################################
#### #### PACKAGES #### ####
######################################################
library(cowplot)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(reshape2)
library(ggrepel)
library(plotly)
library(GeneOverlap) # BiocManager::install("GeneOverlap")
######################################################
# Exporting 3D plots
knitr::knit_hooks$set(webgl = rgl::hook_webgl)
dge_limit <- F # 100
nCores <- 4#parallel::detectCores()
set.seed(2019)
# Load preprocessed data
load("./Data/monocle3_CDS.RData")
cds
monocle3::plot_cells(cds = )
# Load preprocessed data
load("./Data/monocle3_CDS.RData")
cds
monocle3::plot_cells(cds)
monocle3::plot_cells(cds, show_trajectory_graph = F)
monocle3::plot_cells(cds, show_trajectory_graph = F, group_cells_by = "clusters")
monocle3::plot_cells(cds, show_trajectory_graph = F, group_cells_by = "clusters")
monocle3::plot_cells(cds, show_trajectory_graph = F, group_cells_by = "clusters]")
monocle3::plot_cells(cds, show_trajectory_graph = F, group_cells_by = "cluster")
plt_umap <- monocle3::plot_cells(cds, show_trajectory_graph = F, group_cells_by = "cluster")
print(plt_umap)
ggsave("./Results/UMAP_clusters_plot.png")
ggsave("./Results/UMAP_clusters_plot.png", width=7, height=7)
ggsave("./Results/UMAP_clusters_plot.png", width=5, height=5)
ggsave("./Results/UMAP_clusters_plot.png", width=5, height=5, dpi = 500)
ggsave("./Results/UMAP_clusters_plot.png", width=5, height=5) + theme_classic(base_size = 4)
plt_umap <- monocle3::plot_cells(cds, show_trajectory_graph = F, group_cells_by = "cluster") + theme_classic(base_size = 4)
print(plt_umap)
ggsave("./Results/UMAP_clusters_plot.png", width=5, height=5)
plt_umap <- monocle3::plot_cells(cds, show_trajectory_graph = F, group_cells_by = "cluster",
alpha = .8, group_label_size = 12)
plt_umap
ggsave("./Results/UMAP_clusters_plot.png", width=5, height=5)
plt_umap <- monocle3::plot_cells(cds, show_trajectory_graph = F, group_cells_by = "cluster",
alpha = .8, group_label_size = 5)
plt_umap
ggsave("./Results/UMAP_clusters_plot.png", width=5, height=5)
plt_umap3d <- monocle3::plot_cells_3d(cds, show_trajectory_graph = F)
print(plt_umap3d)
plt_umap3d
plt_umap
# Exporting 3D plots
knitr::knit_hooks$set(webgl = rgl::hook_webgl)
plt_umap3d <- monocle3::plot_cells_3d(cds, show_trajectory_graph = F)
print(plt_umap3d)
start_time <- Sys.time()
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
library(monocle3) # devtools::install_github('cole-trapnell-lab/monocle3')
paste("monocle3", packageVersion("monocle3"))
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
######################################################
#### #### PACKAGES #### ####
######################################################
library(cowplot)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(reshape2)
library(ggrepel)
library(plotly)
library(GeneOverlap) # BiocManager::install("GeneOverlap")
######################################################
# Exporting 3D plots
knitr::knit_hooks$set(webgl = rgl::hook_webgl)
dge_limit <- F # 100
nCores <- 4#parallel::detectCores()
set.seed(2019)
# Load preprocessed data
load("./Data/monocle3_CDS.RData")
cds
?ggsave
ggsave("./Results/UMAP_clusters_plot.pdf", width=5, height=5, device="pdf")
ggsave("./Results/UMAP_clusters_plot.pdf", width=5, height=5)
pdf()
ggsave("./Results/UMAP_clusters_plot.pdf", width=5, height=5)
pdf("./Results/UMAP_clusters_plot.pdf")
plt_umap
plt_umap <- monocle3::plot_cells(cds, show_trajectory_graph = F, group_cells_by = "cluster",
alpha = .8, group_label_size = 5)
pdf("./Results/UMAP_clusters_plot.pdf")
plt_umap
plt_umap
dev.off()
pdf("./Results/UMAP_clusters_plot.pdf")
plt_umap
dev.off()
pdf("./Results/UMAP_clusters_plot.pdf")
print(plt_umap)
dev.off()
dev.off()
pdf("./Results/UMAP_clusters_plot.pdf", width=5, height=5, pointsize = 400)
print(plt_umap)
dev.off()
pdf("./Results/UMAP_clusters_plot.pdf", width=5, height=5, pointsize = 400)
print(plt_umap)
dev.off()
ggsave("./Results/UMAP_clusters_plot.pdf", width=5, height=5, dpi=400)
pdf("./Results/UMAP_clusters_plot.pdf", width=5, height=5, pointsize = 600)
print(plt_umap)
dev.off()
ggsave("./Results/UMAP_clusters_plot.pdf", width=5, height=5, dpi=600)
??preprocess_cds
start_time <- Sys.time()
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
# load("Data/seurat_object_add_HTO_ids.Rdata")
load(file.path("Data", "monocle3_CDS.RData"))
######################################################
#### #### PACKAGES #### ####
######################################################
print("Written using: Seurat version* 2.3.4 2018-07-17")
# https://satijalab.org/seurat/install.html
# source("http://bit.ly/archived-seurat")
library(Seurat)
paste("Seurat", packageVersion("Seurat"))
# library(monocle) # BiocManager::install("monocle")
# paste("monocle", packageVersion("monocle"))
library(monocle3)
paste("monocle3", packageVersion("monocle3"))
library(garnett) # devtools::install_github("cole-trapnell-lab/garnett")
start_time <- Sys.time()
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
# load("Data/seurat_object_add_HTO_ids.Rdata")
load(file.path("Data", "monocle3_CDS.RData"))
######################################################
#### #### PACKAGES #### ####
######################################################
print("Written using: Seurat version* 2.3.4 2018-07-17")
# https://satijalab.org/seurat/install.html
# source("http://bit.ly/archived-seurat")
library(Seurat)
paste("Seurat", packageVersion("Seurat"))
# library(monocle) # BiocManager::install("monocle")
# paste("monocle", packageVersion("monocle"))
library(monocle3)
paste("monocle3", packageVersion("monocle3"))
# library(garnett) # devtools::install_github("cole-trapnell-lab/garnett")
paste("garnett", packageVersion("garnett"))
library(cowplot)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(reshape2)
library(ggrepel)
library(plotly)
######################################################
# Exporting 3D plots
knitr::knit_hooks$set(webgl = rgl::hook_webgl)
dge_limit <- F # 100
nCores <- 4#parallel::detectCores()
set.seed(2019)
start_time <- Sys.time()
start_time <- Sys.time()
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
# load("Data/seurat_object_add_HTO_ids.Rdata")
load(file.path("Data", "monocle3_CDS.RData"))
######################################################
#### #### PACKAGES #### ####
######################################################
print("Written using: Seurat version* 2.3.4 2018-07-17")
# https://satijalab.org/seurat/install.html
# source("http://bit.ly/archived-seurat")
library(Seurat)
paste("Seurat", packageVersion("Seurat"))
# library(monocle) # BiocManager::install("monocle")
# paste("monocle", packageVersion("monocle"))
library(monocle3)
paste("monocle3", packageVersion("monocle3"))
# library(garnett) # devtools::install_github("cole-trapnell-lab/garnett")
paste("garnett", packageVersion("garnett"))
library(cowplot)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(reshape2)
library(ggrepel)
library(plotly)
######################################################
# Exporting 3D plots
knitr::knit_hooks$set(webgl = rgl::hook_webgl)
dge_limit <- F # 100
nCores <- 4#parallel::detectCores()
set.seed(2019)
start_time <- Sys.time()
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
# load("Data/seurat_object_add_HTO_ids.Rdata")
load(file.path("Data", "monocle3_CDS.RData"))
######################################################
#### #### PACKAGES #### ####
######################################################
print("Written using: Seurat version* 2.3.4 2018-07-17")
start_time <- Sys.time()
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
# load("Data/seurat_object_add_HTO_ids.Rdata")
load(file.path("Data", "monocle3_CDS.RData"))
######################################################
#### #### PACKAGES #### ####
######################################################
print("Written using: Seurat version* 2.3.4 2018-07-17")
# https://satijalab.org/seurat/install.html
# source("http://bit.ly/archived-seurat")
library(Seurat)
paste("monocle3", packageVersion("monocle3"))
library(cowplot)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(reshape2)
paste("Seurat", packageVersion("Seurat"))
library(plotly)
# Exporting 3D plots
knitr::knit_hooks$set(webgl = rgl::hook_webgl)
dge_limit <- F # 100
nCores <- 4#parallel::detectCores()
set.seed(2019)
load(file.path(resultsPath, "3-11-2019/scRNAseq_results.RData"))
cds <- monocle3::preprocess_cds(cds,
num_dim = 30, #100 by default
return.only.var.genes=F,
residual_model_formula_str = "~ nUMI + percent.mito")
lists_path <-"./Results/curated_modules/"
gene.lists <- lapply(list.files(lists_path, full.names = T, pattern = "*.csv$"), function(x){
group.name <- gsub(".csv$","",basename(x))
dat <- data.table::fread(x)
dat <- dat %>% dplyr::mutate(module = group.name)
colnames(dat)[1] <- "gene.symbol"
return(data.table::data.table(dat))
}) %>% data.table::rbindlist()
# Separate MT-XXX genes from mito
## (separate from other modules too?)
mtx <- readxl::read_excel("./Results/curated_modules//MT-XXX_genes.xlsx")
gene.lists[gene.lists$module=="mito" & (gene.lists$gene.symbol %in% mtx$gene.symbol),"module"] <- "MT-XXX"
if(sum(!(mtx$gene.symbol %in% gene.lists$gene.symbol)) >0){
print("All MT-XXX already in dataframe.")
}
gene.lists <- unique(subset(gene.lists, gene.symbol %in% row.names(fData(cds))))
use_genes <- unique(gene.lists$gene.symbol)
data.table::fwrite(gene.lists, "./Results/curated_modules//curatedModules_genelists.tsv",sep="\t")
cds <- monocle3::preprocess_cds(cds,
num_dim = 30, #100 by default
return.only.var.genes=F,
residual_model_formula_str = "~ nUMI + percent.mito")
class(cds)
# c("UMAP", "tSNE", "PCA", "LSI")
cds <- monocle3::reduce_dimension(cds, reduction_method = "UMAP",
max_components = 3,
# umap.fast_sgd = T,
# cores=nCores
)
paste("monocle3", packageVersion("monocle3"))
start_time <- Sys.time()
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
# load("Data/seurat_object_add_HTO_ids.Rdata")
load(file.path("Data", "monocle3_CDS.RData"))
######################################################
#### #### PACKAGES #### ####
######################################################
print("Written using: Seurat version* 2.3.4 2018-07-17")
# https://satijalab.org/seurat/install.html
# source("http://bit.ly/archived-seurat")
library(Seurat)
paste("Seurat", packageVersion("Seurat"))
# library(monocle) # BiocManager::install("monocle")
# paste("monocle", packageVersion("monocle"))
library(monocle3)
paste("monocle3", packageVersion("monocle3"))
# library(garnett) # devtools::install_github("cole-trapnell-lab/garnett")
# paste("garnett", packageVersion("garnett"))
library(cowplot)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(reshape2)
library(ggrepel)
library(plotly)
######################################################
# Exporting 3D plots
knitr::knit_hooks$set(webgl = rgl::hook_webgl)
dge_limit <- F # 100
nCores <- 4#parallel::detectCores()
set.seed(2019)
lists_path <-"./Results/curated_modules/"
gene.lists <- lapply(list.files(lists_path, full.names = T, pattern = "*.csv$"), function(x){
group.name <- gsub(".csv$","",basename(x))
dat <- data.table::fread(x)
dat <- dat %>% dplyr::mutate(module = group.name)
colnames(dat)[1] <- "gene.symbol"
return(data.table::data.table(dat))
}) %>% data.table::rbindlist()
# Separate MT-XXX genes from mito
## (separate from other modules too?)
mtx <- readxl::read_excel("./Results/curated_modules//MT-XXX_genes.xlsx")
gene.lists[gene.lists$module=="mito" & (gene.lists$gene.symbol %in% mtx$gene.symbol),"module"] <- "MT-XXX"
if(sum(!(mtx$gene.symbol %in% gene.lists$gene.symbol)) >0){
print("All MT-XXX already in dataframe.")
}
gene.lists <- unique(subset(gene.lists, gene.symbol %in% row.names(fData(cds))))
use_genes <- unique(gene.lists$gene.symbol)
data.table::fwrite(gene.lists, "./Results/curated_modules//curatedModules_genelists.tsv",sep="\t")
cds <- monocle3::preprocess_cds(cds,
num_dim = 30, #100 by default
return.only.var.genes=F,
residual_model_formula_str = "~ nUMI + percent.mito")
monocle3::plot_pc_variance_explained(cds)
BiocManager::install()
BiocManager::install()
cds <- monocle3::preprocess_cds(cds,
num_dim = 30, #100 by default
return.only.var.genes=F,
residual_model_formula_str = "~ nUMI + percent.mito")
devtools::install_github('cole-trapnell-lab/monocle3', ref="develop"))
devtools::install_github('cole-trapnell-lab/monocle3', ref="develop")
# library(monocle) # BiocManager::install("monocle")
# paste("monocle", packageVersion("monocle"))
## WARNING! There's currently bugs in the Bioconductor installation of Monocle3, so install the dev version from GitHub instead (see https://github.com/cole-trapnell-lab/monocle3/issues/272)
library(monocle3); # devtools::install_github('cole-trapnell-lab/monocle3', ref="develop")
start_time <- Sys.time()
#### #### Load Objects & Functions #### ####
######################################################
# Import functions
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
# load("Data/seurat_object_add_HTO_ids.Rdata")
load(file.path("Data", "monocle3_CDS.RData"))
######################################################
#### #### PACKAGES #### ####
######################################################
print("Written using: Seurat version* 2.3.4 2018-07-17")
# https://satijalab.org/seurat/install.html
# source("http://bit.ly/archived-seurat")
library(Seurat)
paste("Seurat", packageVersion("Seurat"))
# library(monocle) # BiocManager::install("monocle")
# paste("monocle", packageVersion("monocle"))
## WARNING! There's currently bugs in the Bioconductor installation of Monocle3, so install the dev version from GitHub instead (see https://github.com/cole-trapnell-lab/monocle3/issues/272)
library(monocle3); # devtools::install_github('cole-trapnell-lab/monocle3', ref="develop")
paste("monocle3", packageVersion("monocle3"))
# library(garnett) # devtools::install_github("cole-trapnell-lab/garnett")
# paste("garnett", packageVersion("garnett"))
library(cowplot)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(reshape2)
library(ggrepel)
library(plotly)
######################################################
# Exporting 3D plots
knitr::knit_hooks$set(webgl = rgl::hook_webgl)
dge_limit <- F # 100
nCores <- 4#parallel::detectCores()
set.seed(2019)
lists_path <-"./Results/curated_modules/"
gene.lists <- lapply(list.files(lists_path, full.names = T, pattern = "*.csv$"), function(x){
group.name <- gsub(".csv$","",basename(x))
dat <- data.table::fread(x)
dat <- dat %>% dplyr::mutate(module = group.name)
colnames(dat)[1] <- "gene.symbol"
return(data.table::data.table(dat))
}) %>% data.table::rbindlist()
# Separate MT-XXX genes from mito
## (separate from other modules too?)
mtx <- readxl::read_excel("./Results/curated_modules//MT-XXX_genes.xlsx")
gene.lists[gene.lists$module=="mito" & (gene.lists$gene.symbol %in% mtx$gene.symbol),"module"] <- "MT-XXX"
if(sum(!(mtx$gene.symbol %in% gene.lists$gene.symbol)) >0){
print("All MT-XXX already in dataframe.")
}
gene.lists <- unique(subset(gene.lists, gene.symbol %in% row.names(fData(cds))))
use_genes <- unique(gene.lists$gene.symbol)
data.table::fwrite(gene.lists, "./Results/curated_modules//curatedModules_genelists.tsv",sep="\t")
cds <- monocle3::preprocess_cds(cds,
num_dim = 30, #100 by default
return.only.var.genes=F,
residual_model_formula_str = "~ nUMI + percent.mito")
BiocVersion
BiocVersion::
BiocManager::version()
remove.packages("monocle3")
cds
load(file.path(resultsPath, "3-11-2019/scRNAseq_results.RData"))
devtools::install_github("cole-trapnell-lab/garnett")
load(file.path(resultsPath, "3-11-2019/scRNAseq_results.RData"))
biotypes <- get_biotypes(DAT)
proteins <- biotypes[biotypes$gene_biotype=="protein_coding",]$hgnc_symbol %>% droplevels()
protDAT <- subset_seurat(DAT, genes.use = proteins)
DAT
DAT[proteins,]
DAT
DAT@?SubsetData
?SubsetData
cds <- seurat_to_monocle(seurat_object = DAT, monocle_version = 3)
seurat_object = DAT
seurat_object = DAT
data <- as(as.matrix(seurat_object@assays$RNA@data), 'sparseMatrix')
data <- as(as.matrix(seurat_object@data), 'sparseMatrix')
pd <- new('AnnotatedDataFrame', data = seurat_object@meta.data)
pd
fDATA <- data.frame(gene_short_name = row.names(data), row.names = row.names(data))
fd <- new('AnnotatedDataFrame', data = fDATA)
monocle_cds <- monocle3::new_cell_data_set(expression_data = data,
cell_metadata = seurat_object@meta.data,
gene_metadata = fDATA)
cds
