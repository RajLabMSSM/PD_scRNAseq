k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index")
mod.cast <- reshape2::acast(MOD.dt,
Module1.name~Module2.name,
value.var="Jaccard.index"
)
library(heatmaply)
heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index")
heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index")
heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index",
file = c("./Results/Katia_Modules/module-module.heatmap.html",
"./Results/Katia_Modules/module-module.heatmap.png"))
heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index",
file = c("module-module.heatmap.html",
"module-module.heatmap.png"))
hm <- heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index",
file = c("module-module.heatmap.html",
"module-module.heatmap.png"))
hm <- heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index",
file = c("module-module.heatmap.html",
"module-module.heatmap.png"))
hm <- heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index",
file = "module-module.heatmap.html")
hm("module-module.heatmap.html")
print(hm)
hm
htmlwidgets::shinyRenderWidget("module-module.heatmap.html")
htmltools::tag("module-module.heatmap.html")
shiny::includeHTML("module-module.heatmap.html")
hm <- heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index",
file = "./Results/module-module.heatmap.html")
hm <- heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index",
file = "./Results/Katia_Modules/module-module.heatmap.html")
hm <- heatmaply(mod.cast,
k_row = 5, k_col = 5,
height = 10,
column_text_angle = 0,
xlab = "scRNA-seq Louvain Modules",
ylab = "bulk RNA-seq WGCNA Modules",
cexRow = .7,
key.title = "Jaccard Index",
file = "module-module.heatmap.html")
subset(bulk.modules, Module==mod)
for(mod in unique(bulk.modules$module)){
gostres <- gprofiler2::gost(query = subset(bulk.modules, Module==mod), organism = "hsapiens")
}
gostres <- gprofiler2::gost(query = subset(bulk.modules, module==mod), organism = "hsapiens")
subset(bulk.modules, module==mod)
gostres <- gprofiler2::gost(query = subset(bulk.modules, module==mod)$gene.symbol, organism = "hsapiens")
gostres
View(sc.modules)
gostres$result
enrich.res <- gostres$result
gprofiler2::gostplot(gostres)
enrich.res$module <- cbind(dataset="bulkRNAseq")
cbind(enrich.res, dataset="bulkRNAseq")
cbind(dataset="bulkRNAseq", module=mod, enrich.res)
mod.enrich <- lapply(unique(bulk.modules$module), function(mod){
gostres <- gprofiler2::gost(query = subset(bulk.modules, module==mod)$gene.symbol, organism = "hsapiens")
enrich.res <- gostres$result
enrich.res <- cbind(dataset="bulk-RNA-seq", module=mod, enrich.res)
return(enrich.res)
}) %>% data.table::rbindlist()
dataset
gprofiler2.module_enrichment <- function(mod.df, dataset){
mod.enrich <- lapply(unique(mod.df$module), function(mod, dataset.=dataset){
print(paste("gprofiler2:: Running enrichment on module: ",))
gostres <- gprofiler2::gost(query = subset(mod.df, module==mod)$gene.symbol, organism = "hsapiens")
enrich.res <- gostres$result
enrich.res <- cbind(dataset=dataset., module=mod, enrich.res)
return(enrich.res)
}) %>% data.table::rbindlist()
return(mod.enrich)
}
bulk.modules
bulk.mod.enrich <- gprofiler2.module_enrichment(bulk.modules, dataset = "bulk-RNA-seq")
gprofiler2.module_enrichment <- function(mod.df, dataset=""){
mod.enrich <- lapply(unique(mod.df$module), function(mod, dataset.=dataset){
print(paste("gprofiler2:: Running enrichment on module: ",))
gostres <- gprofiler2::gost(query = subset(mod.df, module==mod)$gene.symbol, organism = "hsapiens")
enrich.res <- gostres$result
enrich.res <- cbind(dataset=dataset., module=mod, enrich.res)
return(enrich.res)
}) %>% data.table::rbindlist()
return(mod.enrich)
}
bulk.mod.enrich <- gprofiler2.module_enrichment(bulk.modules, dataset = "bulk-RNA-seq")
mod.df=bulk.modules
mod.enrich <- lapply(unique(mod.df$module), function(mod, mod.df.=mod.df, dataset.=dataset){
print(paste("gprofiler2:: Running enrichment on module: ",))
gostres <- gprofiler2::gost(query = subset(mod.df, module==mod)$gene.symbol, organism = "hsapiens")
enrich.res <- gostres$result
enrich.res <- cbind(dataset=dataset., module=mod, enrich.res)
return(enrich.res)
}) %>% data.table::rbindlist()
subset(mod.df, module==mod)$gene.symbol
subset(mod.df, module==mod)
subset(mod.df, module==mod)$gene.symbol
gostres <- gprofiler2::gost(query = subset(mod.df, module==mod)$gene.symbol, organism = "hsapiens")
enrich.res <- gostres$result
enrich.res <- cbind(dataset=dataset., module=mod, enrich.res)
dataset.
enrich.res <- cbind(dataset=dataset, module=mod, enrich.res)
dataset = "bulk-RNA-seq"
enrich.res <- cbind(dataset=dataset, module=mod, enrich.res)
enrich.res
gprofiler2.module_enrichment <- function(mod.df, dataset=""){
mod.enrich <- lapply(unique(mod.df$module), function(mod){
print(paste("gprofiler2:: Running enrichment on module: ",))
gostres <- gprofiler2::gost(query = subset(mod.df, module==mod)$gene.symbol, organism = "hsapiens")
enrich.res <- gostres$result
enrich.res <- cbind(dataset=dataset, module=mod, enrich.res)
return(enrich.res)
}) %>% data.table::rbindlist()
return(mod.enrich)
}
bulk.mod.enrich <- gprofiler2.module_enrichment(bulk.modules, dataset = "bulk-RNA-seq")
print(paste("gprofiler2:: Running enrichment on module: ",))
gostres <- gprofiler2::gost(query = subset(mod.df, module==mod)$gene.symbol, organism = "hsapiens")
print(paste("gprofiler2:: Running enrichment on module: ",mod))
gprofiler2.module_enrichment <- function(mod.df, dataset=""){
mod.enrich <- lapply(unique(mod.df$module), function(mod){
print(paste("gprofiler2:: Running enrichment on module:",mod))
gostres <- gprofiler2::gost(query = subset(mod.df, module==mod)$gene.symbol, organism = "hsapiens")
enrich.res <- gostres$result
enrich.res <- cbind(dataset=dataset, module=mod, enrich.res)
return(enrich.res)
}) %>% data.table::rbindlist()
return(mod.enrich)
}
bulk.mod.enrich <- gprofiler2.module_enrichment(bulk.modules, dataset = "bulk-RNA-seq")
filtered_res
marker_res <- data.table::fread("./Results/cluster_markers.csv")
filtered_res <- marker_res %>%
filter(fraction_expressing >= 0.10 & marker_test_q_value <=0.05) %>%
group_by(cell_group) %>% arrange(desc(specificity), desc(pseudo_R2))
createDT(filtered_res)
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
ggplot(subset(filtered_res, gene_id %in% select.genes), aes(x=gene_id, y=mean_expression
)) + geom_col()
ggplot(subset(filtered_res, gene_id %in% select.genes), aes(x=gene_id, y=mean_expression, group=gene_id)) + geom_col()
ggplot(subset(filtered_res, gene_id %in% select.genes), aes(x=gene_id, y=mean_expression, group=cell_group)) + geom_col()
ggplot(subset(filtered_res, gene_id %in% select.genes), aes(x=gene_id, y=mean_expression, fill=cell_group)) + geom_col()
ggplot(subset(filtered_res, gene_id %in% select.genes), aes(x=gene_id, y=mean_expression, fill=factor(cell_group))) + geom_col()
filtered_res.select <- subset(filtered_res, gene_id %in% select.genes)
ggplot(filtered_res.select, aes(x=gene_id, y=mean_expression, fill=factor(cell_group))) + geom_col()
metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity", "pseudo_R2", "marker_test_q_value")
filtered_res.select <-  data.table::melt.data.table(subset(filtered_res, gene_id %in% select.genes),
id.vars = "gene_id", measure.vars = metrics,
variable.name = "Metric")
filtered_res.select <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = "gene_id", measure.vars = metrics,
variable.name = "Metric")
filtered_res.select
filtered_res.select <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = "gene_id", measure.vars = metrics,
variable.name = "metric")
ggplot(filtered_res.select, aes(x=gene_id, y=mean_expression, fill=factor(cell_group))) + geom_col() + facet_grid(~metric)
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) + geom_col() + facet_grid(~metric)
filtered_res.select <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"), measure.vars = metrics,
variable.name = "metric")
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) + geom_col() + facet_grid(~metric)
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(~metric, scales = "free_y")
facet_grid
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(~metric, scales = "free_y", rows = length(metrics))
length(metrics)
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~)
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.)
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
ggplot(filtered_res.select, aes(x=gene_id, y=value)) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
ggplot(filtered_res.select, aes(x=gene_id, y=value), color=gene_id) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
ggplot(filtered_res.select, aes(x=gene_id, y=value, color=gene_id)) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=gene_id)) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
shared.metrics <- c("pseudo_R2", "marker_test_q_value")
cluster.specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
filtered_res.select <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
View(filtered_res.select)
ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(filtered_res.select, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
shared
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared, aes(x=gene_id, y=value, fill=factor(gene_id))) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y")
cowplot::plot_grid(g1, g2)
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
cowplot::plot_grid(g1, g2)
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  theme(legend.title = element_text("Cluster"))
cowplot::plot_grid(g1, g2)
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2)
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
filtered_res %>% dplyr::mutate(neg_log10_q_value = -log10(marker_test_q_value))
filtered_res <- filtered_res %>% dplyr::mutate(neg_log10_q_value = -log10(marker_test_q_value))
filtered_res <- marker_res %>%
filter(fraction_expressing >= 0.10 & marker_test_q_value <=0.05)  %>%
dplyr::mutate(neg_log10_q_value = -log10(marker_test_q_value)) %>%
group_by(cell_group) %>% arrange(desc(specificity), desc(pseudo_R2))
createDT(filtered_res)
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
shared.metrics <- c("pseudo_R2", "neg_log10_q_value")
cluster_specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
shared.metrics <- c("pseudo_R2", "neg_log10_q_value")
cluster_specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
shared.metrics <- c("pseudo_R2", "neg_log10_q_value")
cluster_specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
shared.metrics <- c("pseudo_R2", "neg_log10_q_value")
cluster_specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
shared.metrics <- c("pseudo_R2", "neg_log10_q_value")
cluster_specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
shared.metrics <- c("pseudo_R2", "neg_log10_q_value")
cluster_specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
shared.metrics <- c("pseudo_R2", "neg_log10_q_value")
cluster_specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
shared.metrics <- c("pseudo_R2", "neg_log10_q_value")
cluster_specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col() +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
select.genes <- c("COX5A", "COX6B1", "COX7A2", "COX7B", "NDUFA1", "MS4A4A", "PYCARD", "S100A4")
shared.metrics <- c("pseudo_R2", "neg_log10_q_value")
cluster_specific.metrics <- c("mean_expression","marker_score","fraction_expressing", "specificity")
shared <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = shared.metrics,
variable.name = "metric")
cluster_specific <-  data.table::melt.data.table(data.table(subset(filtered_res, gene_id %in% select.genes)),
id.vars = c("gene_id","cell_group"),
measure.vars = cluster.specific.metrics,
variable.name = "metric")
g1 <- ggplot(shared) +
geom_col(aes(x=gene_id, y=value, fill=factor(gene_id)), show.legend = F) +
facet_grid(metric~.,scales = "free_y")
g2 <- ggplot(cluster_specific, aes(x=gene_id, y=value, fill=factor(cell_group))) +
geom_col(position = "dodge") +
facet_grid(metric~.,scales = "free_y") +  scale_fill_discrete(name = "Cluster")
cowplot::plot_grid(g1, g2, labels = c("Metrics Shared by Clusters", "Metrics Specific to Clusters"))
top_cluster_markers <- function(cds_DGE,
cluster_list=c(1,2),
genes_to_test_per_group=100,
save_path= "./Results/cluster_markers.csv",
verbose=F){
# Subset clusters
cds_clusts <- cds_DGE[,(pData(cds_DGE)$Cluster %in% cluster_list)]
# Test
marker_test_res = monocle3::top_markers(cds_clusts,
group_cells_by="cluster",
genes_to_test_per_group = genes_to_test_per_group,
cores=nCores,
verbose=verbose)
# Sort
marker_test_res <- marker_test_res %>% arrange(desc(fraction_expressing), marker_test_q_value, desc(specificity), desc(pseudo_R2))
# Save
if(save_path!=F){
data.table::fwrite(marker_test_res, save_path)
}
# Filter and plot top markers
## Filter
filtered_res <- marker_test_res %>%
filter(fraction_expressing >= 0.10 & marker_test_q_value <=0.05) %>%
group_by(cell_group) %>% arrange(desc(specificity), desc(pseudo_R2))
## Plot
top_specific_markers <- filtered_res$gene_id[1:min(c(10,nrow(filtered_res)))] %>% unique()
print(paste("Plotting the top",length(top_specific_markers), "specific markers."))
monocle3::plot_cells(cds_DGE,
genes = top_specific_markers,
show_trajectory_graph = F)
# Return full results
return(marker_test_res)
}
