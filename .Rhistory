# dge[is.na(dge)] <-0
# dge$cone <-  pi*dge$estimate#((dge$estimate)^2)*(-log10(dge$q_value)/3)
# dge$cone.surface = pi*dge$estimate*(dge$estimate+sqrt(dge$q_value^2+dge$estimate^2))
p <- plot_ly(dge,
x = ~test_val,
y = ~estimate,
z = ~-log10(q_value),
text = ~ gene_short_name,
marker = list( color = colorRampPalette(RColorBrewer::brewer.pal(11,"Spectral"))(200), showscale = T)) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Normalized Effect'),
yaxis = list(title = 'Effect'),
zaxis = list(title = '-log(q-value)')))
p
library(dplyr)
library(ggplot2)
root = "./"
source(file.path(root,"MAIN.R"))
import_parameters(params)
load("./Data/monocle3_CDS.RData")
nCores <- 4
gene_module_df
gene_module_df = monocle3::find_gene_modules(cds[var.genes[1:1000], ],
# resolution=1e-2,
reduction_method = "UMAP",
max_components = 3,
cores=nCores,
umap.fast_sgd = F, # Slower but determinstic results
random_seed = 2019)
data.table::fwrite(gene_module_df, "./Results/sc.modules_by_gene.txt", sep="\t")
createDT(gene_module_df)
# Create pheatmap table
cell_group_df = tibble::tibble(cell=row.names(SummarizedExperiment::colData(cds)),
cell_group=monocle3::clusters(cds)[colnames(cds)])
agg_mat = monocle3::aggregate_gene_expression(cds, gene_module_df, cell_group_df)
row.names(agg_mat) = stringr::str_c("Module ", row.names(agg_mat))
colnames(agg_mat) = stringr::str_c("Cluster ", colnames(agg_mat))
module_cluster_exp <- data.frame(as.matrix(agg_mat))
data.table::fwrite(data.table::data.table(module_cluster_exp, keep.rownames = "Module"),
"./Results/sc.modules_by_cluster.txt", sep="\t" )
# Plot
pheatmap::pheatmap(agg_mat, cluster_rows=T, cluster_cols=F,
scale="column", clustering_method="ward.D2",
fontsize=6)
# module_cluster_exp
module_cluster_exp
# plotly R documentation: https://plot.ly/r/
# rgl::plot3d(x = gene_module_df$dim_1, y=gene_module_df$dim_2, z=gene_module_df$dim_3, )
p.3d <- plotly::plot_ly(gene_module_df,
x = ~dim_1, y = ~dim_2, z = ~dim_3,
color = ~module,
text = ~paste("Gene:",id),
colors = "Dark2",
# alpha = .7,
size = 5
) %>%
plotly::layout(title = 'scRNA-seq Gene Co-expression Modules')  %>%
plotly::add_markers() %>%
plotly::layout(scene = list(xaxis = list(title = 'UMAP 1'),
yaxis = list(title = 'UMAP 2'),
zaxis = list(title = 'UMAP 3')))
htmltools::tagList(setNames(list(p.3d), NULL))
monocle3::plot_cells(cds,
genes=gene_module_df,
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F) #  rasterize = T (for super high-res figures)
gene_module_df
p <- monocle3::plot_cells(cds,
genes=gene_module_df,
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F) #  rasterize = T (for super high-res figures)
print(p)
gene_module_df <-data.table::fread("./Results/sc.modules_by_gene.txt")
p <- monocle3::plot_cells(cds,
genes=gene_module_df,
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F) #  rasterize = T (for super high-res figures)
print(p)
gene_module_df
p2 <- monocle3::plot_cells(cds,
genes=subset(gene_module_df, module==9),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F) #  rasterize = T (for super high-res figures)
print(p2)
subset(gene_module_df, module==9)
mod.sub <- subset(gene_module_df, module==9)
View(mod.sub)
print(p)
p2 <- monocle3::plot_cells(cds,
genes=subset(gene_module_df, module==9),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F) #  rasterize = T (for super high-res figures)
print(p2)
ggsave("./Results/sc.module9.png", plot = p2, dpi = 400)
ggsave("./Results/sc.module9.png", plot=p2, dpi=400, width=5, height=4)
ggsave("./Results/sc.module9.png", plot=p2, dpi=400, width=5, height=3.5)
# Prepare bulk modules
bulk.modules <- data.table::fread("./Data/Katia_Modules/Gene_modules.tbl.txt")
# bulk.modules$ensembl.id <- gsub("\\.*","", bulk.modules$gene_ids)
# ensembl.dict <- ENSG_to_HGNC(ensembl_ids = unique(bulk.modules$gene_ids),
#                              reference_genome="grch38",
#                              input = "ensembl_transcript_id")
if(!file.exists("./Data/Katia_Modules/ens.geneid.gencode.v30")){
system("scp schilb03@chimera.hpc.mssm.edu:/sc/hydra/projects/pd-omics/GRCH38.p12/ens.geneid.gencode.v30 ./Data/Katia_Modules")
}
ensembl.dt <- data.table::fread("./Data/Katia_Modules/ens.geneid.gencode.v30")
ensembl.dict <- setNames(ensembl.dt$GeneSymbol, ensembl.dt$gene_id)
bulk.modules$gene.symbol <- ensembl.dict[bulk.modules$gene_ids]
bulk.modules <- bulk.modules %>% dplyr::rename(module=moduleColors)
createDT(bulk.modules)
# Prepare sc modules
sc.modules <- data.table::fread("./Results/sc.modules_by_gene.txt") %>% dplyr::rename(gene.symbol=id)
createDT(sc.modules)
sc.modules
bulk.modules
sc.modules
bulk.modules
bulk.MM <- data.table::fread("./Results/WGCNA Analysis - FINAL.csv")
bulk.MM <- data.table::fread("./Results/WGCNA Analysis - FINAL.csv")
bulk.MM <- data.table::fread("./Data/Katia_Modules/WGCNA Analysis - FINAL.csv")
bulk.MM
sc.modules
data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T)
sc.modules
bulk.MM
startsWith("MM",colnames(bulk.MM))
colnames(bulk.MM)
startsWith(colnames(bulk.MM), "MM")
grep("MM*",colnames(bulk.MM))
grep("MM*",colnames(bulk.MM), value = T)
bulk.mod.names <- grep("MM*",colnames(bulk.MM), value = T)
bulk.MM <- data.table::fread("./Data/Katia_Modules/ModuleMembership_symbol_modules.tbl.txt")
bulk.MM
bulk.MM <- data.table::fread("./Data/Katia_Modules/ModuleMembership_symbol_modules.tbl.txt")
bulk.mod.names
bulk.mod.names <- grep("MM*",colnames(bulk.MM), value = T)
bulk.mod.names
bulk.MM <- data.table::fread("./Data/Katia_Modules/ModuleMembership_symbol_modules.tbl.txt", drop = c("MM"))
bulk.MM
bulk.mod.names <- grep("MM*",colnames(bulk.MM), value = T)
bulk.mod.names
sc.modules
sc.modules
data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = "gene.symbol",
measure.vars = bulk.mod.names,
variable.name = "module")
data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("gene.symbol"),
measure.vars = bulk.mod.names,
variable.name = "module")
data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T)
data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol"),
measure.vars = bulk.mod.names,
variable.name = "module")
data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "module")
data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "module",
value.name = "MM")
data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "module",
value.name = "bulk.MM")
data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","module","supermodule","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM")
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","module","supermodule","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM")
cds@reducedDims$UMAP
cds@reduce_dim_aux@listData
cds@reduce_dim_aux
cds@reducedDims@metadata
cds@reducedDims
cds@reduce_dim_aux
cds@reducedDims$UMAP
merged.mods
sc.modules
pData(cds)
fData(cds)
cds@clusters
cds@clusters$UMAP
cds@clusters$UMAP$
cds@clusters$UMAP$partitions
cds@colData
cds@int_elementMetadata
cds@int_metadata
bulk.MMstr(cds)
str(cds)
cds@rowRanges@partitioning
cds@rowRanges@partitioning %>% data.table::data.table()
cds@rowRanges@partitioning %>% data.frame()
f
feats <- cds@rowRanges@partitioning %>% data.frame()
feats$start %>% unique()
feats
str(feats)
str(cds)
cds@reducedDims$UMAP
merged.mods
sc.modules
merged.mods %>% dplyr::mutate(dim_1 = dim_1*bulk.MM,
dim_2 = dim_2*bulk.MM*dim_2,
dim_3 = dim_3*bulk.MM*dim_3)
merged.mods <-merged.mods %>% dplyr::mutate(dim_1 = dim_1*bulk.MM,
dim_2 = dim_2*bulk.MM*dim_2,
dim_3 = dim_3*bulk.MM*dim_3)
monocle3::plot_cells(cds,
genes=merged.mods,
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
merged.mods
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM")
merged.mods <-merged.mods %>% dplyr::mutate(dim_1 = dim_1*bulk.MM,
dim_2 = dim_2*bulk.MM*dim_2,
dim_3 = dim_3*bulk.MM*dim_3)
merged.mods
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM")
merged.mods
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM") %>% unique()
merged.mods
sc.modules
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM")
merged.mods
cell_group_df
data.table::fwrite(gene_module_df, "./Results/sc.modules_by_gene.txt", sep="\t")
createDT(gene_module_df)
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM")
merged.mods
sc.modules
merged.mods
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM") %>%
dplyr::select(gene.symbol, module=bulk.module, supermodule=bulk.module, dim_1, dim_2, dim_3)
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM") %>%
dplyr::select(gene.symbol=symbol, module=bulk.module, supermodule=bulk.module, dim_1, dim_2, dim_3)
merged.mods
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM") %>%
dplyr::mutate(supermodule=bulk.module) %>%
dplyr::select(gene.symbol=symbol, module=bulk.module, supermodule=bulk.module, dim_1, dim_2, dim_3)
merged.mods
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM") %>%
dplyr::mutate(supermodule=bulk.module) %>%
dplyr::select(gene.symbol=symbol, module=bulk.module, supermodule, dim_1, dim_2, dim_3)
merged.mods
monocle3::plot_cells(cds,
genes=merged.mods,
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
merged.mods
unique(merged.mods)
merged.mods
merged.mods <- data.table:::merge.data.table(bulk.MM, sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T) %>%
data.table::melt.data.table(id.vars = c("symbol","dim_1","dim_2","dim_3"),
measure.vars = bulk.mod.names,
variable.name = "bulk.module",
value.name = "bulk.MM") %>%
dplyr::mutate(supermodule=bulk.module) %>%
dplyr::select(gene.symbol=symbol, module=bulk.module, supermodule, dim_1, dim_2, dim_3)  %>%
unique()
monocle3::plot_cells(cds,
genes=merged.mods,
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
merged.mods
# bulk.MM <- data.table::fread("./Data/Katia_Modules/ModuleMembership_symbol_modules.tbl.txt", drop = c("MM"))
bulk.module
# bulk.MM <- data.table::fread("./Data/Katia_Modules/ModuleMembership_symbol_modules.tbl.txt", drop = c("MM"))
bulk.modules
merged.mods <- data.table:::merge.data.table(bulk.modules,
sc.modules,
by.x = "symbol",
by.y = "gene.symbol", all.y = T)
bulk.modules
merged.mods <- data.table:::merge.data.table(bulk.modules,
sc.modules,
by= "gene.symbol",
all.y = T) #%>%
merged.mods
bulk.modules
merged.mods <- data.table:::merge.data.table(bulk.modules %>% dplyr::select(bulk.module=module, gene.symbol),
sc.modules,
by= "gene.symbol",
all.y = T) #%>%
merged.mods
merged.mods <- data.table:::merge.data.table(bulk.modules %>% dplyr::select(bulk.module=module, gene.symbol),
sc.modules,
by= "gene.symbol",
all.y = T) %>%
dplyr::select(gene.symbol, module=bulk.module, supermodule, dim_1, dim_2, dim_3)
monocle3::plot_cells(cds,
genes=merged.mods,
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
merged.mods
row.names(merged.mods)
row.names(merged.mods) <- merged.mods$gene.symbol
merged.mods$gene.symbol
unique(merged.mods$gene.symbol)
length(unique(merged.mods$gene.symbol))
merged.mods <- data.table:::merge.data.table(bulk.modules %>% dplyr::select(bulk.module=module, gene.symbol),
sc.modules,
by= "gene.symbol",
all.y = T) %>%
dplyr::select(gene.symbol, module=bulk.module, supermodule, dim_1, dim_2, dim_3)
merged.mods
duplicated(merged.mods$gene.symbol)
merged.mods$gene.symbol[duplicated(merged.mods$gene.symbol)]
merged.mods <- data.table:::merge.data.table(bulk.modules %>% dplyr::select(bulk.module=module, gene.symbol),
sc.modules,
by= "gene.symbol",
all.y = T) %>%
dplyr::select(gene.symbol, module=bulk.module, supermodule, dim_1, dim_2, dim_3) %>% unique()
merged.mods
monocle3::plot_cells(cds,
genes=merged.mods,
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
merged.mods
merged.mods$module%>%unique()
#
# merged.mods$gene.symbol[duplicated(merged.mods$gene.symbol)]
# row.names(merged.mods) <- merged.mods$gene.symbol
select.modules <- c("sienna3","darkmagenta","green")
monocle3::plot_cells(cds,
genes=subset(merged.mods, module %>% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
#
# merged.mods$gene.symbol[duplicated(merged.mods$gene.symbol)]
# row.names(merged.mods) <- merged.mods$gene.symbol
select.modules <- c("sienna3","darkmagenta","green")
monocle3::plot_cells(cds,
genes=subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
#
# merged.mods$gene.symbol[duplicated(merged.mods$gene.symbol)]
# row.names(merged.mods) <- merged.mods$gene.symbol
select.modules <- c("sienna3","darkmagenta","green", "magenta")
monocle3::plot_cells(cds,
genes=subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
monocle3::plot_cells(cds,
genes=merged.mods,#subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
select.modules <- c("sienna3","darkmagenta","green", "magenta")
unique(merged.mods$module)
select.modules <- unique(merged.mods$module)[1:15]#c("sienna3","darkmagenta","green", "magenta") # unique(merged.mods$module)
monocle3::plot_cells(cds,
genes=subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
select.modules <- c("antiquewhite4","darkseagreen4","bisque4","plum1",
"blue","darkturquoise","purple","yellowgreen","ivory",
"pink","magenta","darkmagenta","honeydew1","maroon","midnightblue","turquoise") # uunique(merged.mods$module)[1:15]
monocle3::plot_cells(cds,
genes=subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
unique(merged.mods$module)
sort(unique(merged.mods$module))
select.modules <- c("lavenderblush3","darkturquoise","midnightblue","salmon4",
"honeydew1","pink","darkmagenta", ) # sort(unique(merged.mods$module))[1:15]
select.modules <- c("lavenderblush3","darkturquoise","midnightblue","salmon4",
"honeydew1","pink","darkmagenta") # sort(unique(merged.mods$module))[1:15]
monocle3::plot_cells(cds,
genes=subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
select.modules <- c("lavenderblush3","darkturquoise","midnightblue","salmon4",
"honeydew1","pink","darkmagenta","green") # sort(unique(merged.mods$module))[1:15]
monocle3::plot_cells(cds,
genes=subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
select.modules <- c("lavenderblush3","darkturquoise","midnightblue","salmon4",
"honeydew1","pink","darkmagenta","green","blue","brown",
"darkolivegreen","darkorange2","purple","skyblue3",
"thistle1","thistle2") # sort(unique(merged.mods$module))[1:15]
monocle3::plot_cells(cds,
genes=subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
p <- monocle3::plot_cells(cds,
genes=subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
ggsave("./Results/sc.module9.png", plot=p, dpi=400, width=10, height=7)
ggsave("./Results/sc_to_bulk.png", plot=p, dpi=400, width=10, height=7)
"https://rajlabmssm.github.io/WGCNA_MyND/2nd_batch_Analysis/protein_coding/04_sva/deepSplit_4/signed/04_page_sva_deep4_signed_PC.html#boxplot_mergedmes"=="https://rajlabmssm.github.io/WGCNA_MyND/2nd_batch_Analysis/protein_coding/04_sva/deepSplit_4/signed/04_page_sva_deep4_signed_PC.html#boxplot_mergedmes"
p <- monocle3::plot_cells(cds,
genes=subset(merged.mods, module %in% select.modules),
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
print(p)
p2 <- monocle3::plot_cells(cds,
genes=merged.mods,
group_cells_by="cluster",
color_cells_by="cluster",
show_trajectory_graph=F)
print(p2)
ggsave("./Results/sc_to_bulk.all.png", plot=p2, dpi=400, width=20, height=14)
